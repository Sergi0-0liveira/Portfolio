-- at the beginning of this work the BD was "reading" the "date field as YYYY-MM-DD,
-- this made the dates sorted by Day and then month and last year. year;
-- that is, first sorted all per day...
-- to solve, try setting the DB date type with the expression:
set datestyle = ISO, DMY;

-- After I changed the 'data type' of the Date columnalter table "CovidDeaths.csv" 
alter date type date;

select location, date, total_cases, new_cases, total_deaths, population
from "CovidDeaths.csv" cdc 
order by 1,2 

-- First exploration, trying to understand the Total Cases VS Total Deaths, 
-- simply understanding the % of Deaths and the likelihood of dying from this. 
-- first globally 
select location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 as Death_Percentage
from "CovidDeaths.csv" cdc 
order by 1,2

-- Then in Portugal
select location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 as Death_Percentage
from "CovidDeaths.csv" cdc
where location = 'Portugal'
order by 1,2

-- Then In states, using the like experession, since I am not sure how it is written
select location, date, total_cases, total_deaths, (total_deaths/total_cases)*100 as Death_Percentage
from "CovidDeaths.csv" cdc
where location like '%States%'
order by 1,2

--- Understand the percentagem of the Population that got covid

select location, date, total_cases, population, (total_cases/population)*100 as Infected_Population
from "CovidDeaths.csv" cdc 
order by 1,2

-- Understand the countries with the hightes infection rate
select location, Max(total_cases) as Total_Pop_Infected, population, Max((total_cases/population)*100) as Infected_Population
from "CovidDeaths.csv" cdc 
Group by location, population
order by Infected_Population desc

-- Understanding the country  with biggest number of deaths from "CovidData"

select location, Max(total_deaths) as death_count
from "CovidDeaths.csv" cdc 
where continent != '' and total_deaths is not null
group by location 
order by death_count desc

-- Breaking down the information by continent

select location, Max(total_deaths) as death_count
from "CovidDeaths.csv" cdc 
where continent ='' 
and location != 'Upper middle income' 
and location != 'High income' 
and location != 'Lower middle income' 
and location !='Low income'
group by location
order by death_count desc

-- global numbers
select date, sum(new_cases) as total_new_cases, sum(new_deaths) as total_new_deaths, sum(new_deaths)/nullif(sum(new_cases),0)*100 as death_percentage
from "CovidDeaths.csv" cdc 
where continent ='' 
and location != 'Upper middle income' 
and location != 'High income' 
and location != 'Lower middle income' 
and location !='Low income'
group by date
order by 1,2

-- Global Cases and deaths so far
select sum(new_cases) as total_new_cases, sum(new_deaths) as total_new_deaths, sum(new_deaths)/nullif(sum(new_cases),0)*100 as death_percentage
from "CovidDeaths.csv" cdc 
where continent ='' 
and location != 'Upper middle income' 
and location != 'High income' 
and location != 'Lower middle income' 
and location !='Low income'
order by 1,2

-- Vacinations file
select * from covidvaccinations_csv cc 

ALTER table covidvaccinations_csv  
ALTER COLUMN "date" TYPE date USING "date"::date;


-- Join table
select *
from coviddeaths_csv cc2
join covidvaccinations_csv cc 
	on cc2.location = cc.location
	and cc2.date = cc.date
where cc2.location = 'Portugal'


-- total population vs vacination
--
--we are partition this by location because we want for the rolling to stop when it gets to another country/location 

select dea.continent, dea.location, dea.population, dea.date, vac.new_vaccinations,
	sum(
		cast(
			case
				when coalesce (vac.new_vaccinations, '') = '' then '0'
				when vac.new_vaccinations is null then '0'
				else vac.new_vaccinations
			end
			as int)) over (partition by dea.location order by dea.location, vac.date) as RollingPeopleVaccinated
from coviddeaths_csv dea 
join covidvaccinations_csv vac 
	on dea.location = vac.location
	and dea.date = vac.date
where dea.continent != ''


-- Temp Table
drop table if exists PercentPolulationVaccinated

select dea.continent, dea.location, dea.population, dea.date, vac.new_vaccinations,
	sum(
		cast(
			case
				when coalesce (vac.new_vaccinations, '') = '' then '0'
				when vac.new_vaccinations is null then '0'
				else vac.new_vaccinations
			end
			as float)) over (partition by dea.location order by dea.location, dea.date) as RollingPeopleVaccinated
into temp PercentPolulationVaccinated
from coviddeaths_csv dea 
join covidvaccinations_csv vac 
	on dea.location = vac.location
	and dea.date = vac.date
where dea.continent != ''



select *, (RollingPeopleVaccinated/population)*100 as PercentagePopVacinated
from PercentPolulationVaccinated
where location = 'Portugal'

-- I encountered a problem with my vaccianations data. I dropped the table vacinations

drop table covidvacinations_csv 

-- creating a view to store data. 


create view worlddeathcount as
select location, Max(total_deaths) as death_count
from coviddeaths_csv cc 
where continent ='' 
and location != 'Upper middle income' 
and location != 'High income' 
and location != 'Lower middle income' 
and location !='Low income'
group by location
order by death_count desc

-- we can now query this view 
select *
from public.worlddeathcount 

